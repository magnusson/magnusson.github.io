{"data":{"site":{"siteMetadata":{"title":"Rickard Magnusson"}},"markdownRemark":{"html":"<p>I've been coding a rock paper scissor game and wanted to write a bit about the development of it.</p>\n<p>I decided to make a game to be able to make good use of the real-time database from <a href=\"https://firebase.google.com/\">Firebase</a>.\nIt was surprisingly easy to set up and use. To set up the connection all I need is a enter my application keys and you are up and running.</p>\n<pre><code class=\"language-js\">import * as firebase from 'firebase/app'\nimport 'firebase/database'\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n})\n\nexport default firebaseApp\n</code></pre>\n<p>With the firebase connection set up all you do to get the data from the database is to set a up a ref to the data.\nThis creates an ref to the players object in a lobby with the set <code>gameId</code>.</p>\n<pre><code class=\"language-js\">const playersRef = firebaseApp.database().ref(`${gameId}/players`)\n</code></pre>\n<p>With the ref available there I use two functions <code>.once()</code> and <code>.on()</code>.\nI use <code>.once()</code> to fetch the data from the database if there already is someone in the lobby and updates it with a the current players.\nUsing <code>.on()</code> works like a listener for changes on the reference. When a player joins the lobby we update the state and can start the game.</p>","frontmatter":{"title":"Klunsa ✊✋✌"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/klunsa/"}}