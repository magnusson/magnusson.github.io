{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./content/assets/favicon.png","webpack:///./src/components/PostListItem.js","webpack:///./src/components/PostList.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_PostList__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","Title","styled","h2","withConfig","displayName","componentId","Content","p","a","createElement","role","aria-label","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GlobalStyle","createGlobalStyle","_templateObject","Main","main","_ref","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","site","siteMetadata","meta","name","content","link","rel","type","href","favicon","lang","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Post","li","PostLink","Link","PostTitle","PostDesc","PostInfo","div","PostTime","time","PostTag","PostListItem","react_default","to","post","fields","slug","frontmatter","excerpt","datetime","date","tag","Wrapper","ol","gatsby_browser_entry","allMarkdownRemark","edges","map","node","key","id","_3857981134"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAKMS,EAAQC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,kCAKLK,EAAUL,IAAOM,EAAVJ,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,qDAMER,EAAA,0BACbE,EAAAa,EAAAC,cAACZ,EAAA,EAAD,KACEF,EAAAa,EAAAC,cAACT,EAAD,iBACY,IACVL,EAAAa,EAAAC,cAAA,QAAMC,KAAK,MAAMC,aAAW,WAA5B,OAIFhB,EAAAa,EAAAC,cAACH,EAAD,yEACoE,IAClEX,EAAAa,EAAAC,cAAA,QAAMC,KAAK,MAAMC,aAAW,gCAA5B,OAIFhB,EAAAa,EAAAC,cAACX,EAAA,EAAD,0CC9BJP,EAAAC,EAAAC,GAAAF,EAAAqB,EAAAnB,EAAA,4BAAAoB,IAAAtB,EAAAqB,EAAAnB,EAAA,uCAAAqB,IAAAvB,EAAAqB,EAAAnB,EAAA,gCAAAsB,IAAA,IAAArB,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAsB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAK,EAAAoB,GAAAE,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAAK,EAAAsB,GAAA3B,EAAAqB,EAAAnB,EAAA,yBAAA0B,EAAAX,IAAAjB,EAAAqB,EAAAnB,EAAA,+BAAAyB,EAAA,aAAA3B,EAAAqB,EAAAnB,EAAA,6BAAAyB,EAAA,WAAA3B,EAAAqB,EAAAnB,EAAA,yBAAAyB,EAAA,OAAA3B,EAAAqB,EAAAnB,EAAA,4BAAAyB,EAAA,UAAA3B,EAAAqB,EAAAnB,EAAA,+BAAAyB,EAAA,iBAAAE,EAAA7B,EAAA,KAAA8B,EAAA9B,EAAAK,EAAAwB,GAAA7B,EAAAqB,EAAAnB,EAAA,iCAAA4B,EAAAb,IAAA,IAAAc,EAAA/B,EAAA,IAAAA,EAAAqB,EAAAnB,EAAA,8BAAA6B,EAAA,IAYA,IAAMR,EAAqBS,IAAMC,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvB9B,EAAAa,EAAAC,cAACK,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDjC,EAAAa,EAAAC,cAAA,uCAaf,SAASI,IACP,MAAM,IAAImB,MACR,gVATJjB,EAAYkB,UAAY,CACtBL,KAAMM,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kkBCO/C,IAAMK,EAAcC,YAAHC,KA8BXC,EAAO9C,IAAO+C,KAAV7C,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,gDAMKR,EAAA,WAAAwD,GAAA,IAAGlB,EAAHkB,EAAGlB,SAAH,OACbmB,EAAA1C,EAAAC,cAAC0C,EAAA,YAAD,CACEtB,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACVsB,EAAA1C,EAAAC,cAAAyC,EAAA1C,EAAA4C,SAAA,KACEF,EAAA1C,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,MAAO1B,EAAK2B,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,uCAGbC,KAAM,CACJ,CAAEC,IAAK,gBAAiBC,KAAM,YAAaC,KAAI,GAAKC,OAGtDd,EAAA1C,EAAAC,cAAA,QAAMwD,KAAK,QAEbf,EAAA1C,EAAAC,cAACsC,EAAD,KAAOhB,GACPmB,EAAA1C,EAAAC,cAACmC,EAAD,QA3BNhB,KAAAsC,2LCtCIC,EAAmB,SAAAlB,GAAkB,IAAfmB,EAAenB,EAAfmB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOjD,IAAMd,cAAcgE,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBlC,UAAY,CAC3BmC,SAAUlC,IAAU2C,MAAM,CACxBL,SAAUtC,IAAUE,OAAOC,aAC1BA,YAGU8B,iCCrBf3B,EAAAC,QAAiBlD,EAAAgB,EAAuB,m2BCIlCuE,EAAO7E,IAAO8E,GAAV5E,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,8MAsBJ+E,EAAW/E,YAAOgF,QAAV9E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,kBAIRiF,EAAYjF,IAAOC,GAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,oCAKTkF,EAAWlF,IAAOM,EAAVJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,wCAKRmF,EAAWnF,IAAOoF,IAAVlF,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,0NAeRqF,EAAWrF,IAAOsF,KAAVpF,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,2GAURuF,EAAUvF,IAAOoF,IAAVlF,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,0GAWEwF,EAAA,SAAAhE,GAAK,OAClBiE,EAAAlF,EAAAC,cAACqE,EAAD,KACEY,EAAAlF,EAAAC,cAACuE,EAAD,CAAUW,GAAIlE,EAAMmE,KAAKC,OAAOC,MAC9BJ,EAAAlF,EAAAC,cAACyE,EAAD,KAAYzD,EAAMmE,KAAKG,YAAYzC,OACnCoC,EAAAlF,EAAAC,cAAC0E,EAAD,KAAW1D,EAAMmE,KAAKI,UAExBN,EAAAlF,EAAAC,cAAC2E,EAAD,KACEM,EAAAlF,EAAAC,cAAC6E,EAAD,CAAUW,SAAUxE,EAAMmE,KAAKG,YAAYG,MACxCzE,EAAMmE,KAAKG,YAAYG,MAE1BR,EAAAlF,EAAAC,cAAC+E,EAAD,KACEE,EAAAlF,EAAAC,cAAA,SAAIgB,EAAMmE,KAAKG,YAAYI,SClF7BC,EAAUnG,IAAOoG,GAAVlG,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,gCAKER,EAAA,oBACbiG,EAAAlF,EAAAC,cAAC6F,EAAA,YAAD,CACEzE,MAAK,aAqBLC,OAAQ,SAAAF,GAAI,OACV8D,EAAAlF,EAAAC,cAAC2F,EAAD,KACGxE,EAAK2E,kBAAkBC,MAAMC,IAAI,SAAAxD,GAAA,IAAGyD,EAAHzD,EAAGyD,KAAH,OAChChB,EAAAlF,EAAAC,cAACgF,EAAD,CAAckB,IAAKD,EAAKE,GAAIhB,KAAMc,QAzB1C9E,KAAAiF","file":"component---src-pages-404-js-b3b870506ec596c92990.js","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport PostList from '../components/PostList'\r\nimport styled from 'styled-components'\r\n\r\nconst Title = styled.h2`\r\n  font-size: 3rem;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Content = styled.p`\r\n  font-size: 2rem;\r\n  line-height: 2.4rem;\r\n  padding: 1rem;\r\n`\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Title>\r\n      Not found{' '}\r\n      <span role=\"img\" aria-label=\"Fearful\">\r\n        ðŸ˜¨\r\n      </span>\r\n    </Title>\r\n    <Content>\r\n      This should not happen, go read one of the working posts instead.{' '}\r\n      <span role=\"img\" aria-label=\"Backhand Index Pointing Down\">\r\n        ðŸ‘‡\r\n      </span>\r\n    </Content>\r\n    <PostList />\r\n  </Layout>\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport favicon from '../../content/assets/favicon.png'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport styled from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n    background-color: #1a1a1a;\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Oxygen\", sans-serif;\r\n    color: #fafbfc;\r\n  }\r\n\r\n  a {\r\n    color: #fafbfc;\r\n    text-decoration: none;\r\n  }\r\n\r\n  iframe {\r\n    border: none;\r\n  }\r\n`\r\n\r\nconst Main = styled.main`\r\n  width: 85%;\r\n  max-width: 825px;\r\n  margin: 4em auto;\r\n`\r\n\r\nexport default ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            {\r\n              name: 'description',\r\n              content: 'A simple personal place on the web',\r\n            },\r\n          ]}\r\n          link={[\r\n            { rel: 'shortcut icon', type: 'image/png', href: `${favicon}` },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n        </Helmet>\r\n        <Main>{children}</Main>\r\n        <GlobalStyle />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-7741141cfe083d8463d9e7ab94948a32.png\";","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nconst Post = styled.li`\r\n  display: flex;\r\n  border-bottom: 1px dotted #252526;\r\n  padding: 2rem 1rem;\r\n\r\n  &:hover {\r\n    background-color: #252526;\r\n\r\n    h2 {\r\n      color: #0e639c;\r\n    }\r\n\r\n    time {\r\n      color: #0e639c;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nconst PostLink = styled(Link)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PostTitle = styled.h2`\r\n  font-size: 3rem;\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst PostDesc = styled.p`\r\n  font-size: 2.4rem;\r\n  line-height: 3rem;\r\n`\r\n\r\nconst PostInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.2rem;\r\n  text-align: right;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: left;\r\n    padding-top: 1rem;\r\n  }\r\n`\r\n\r\nconst PostTime = styled.time`\r\n  width: 100px;\r\n  font-size: 1.8rem;\r\n  padding-bottom: 1rem;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst PostTag = styled.div`\r\n  font-size: 1.4rem;\r\n\r\n  p {\r\n    display: inline-block;\r\n    background-color: #68217a;\r\n    border-radius: 0.4rem;\r\n    padding: 1rem;\r\n  }\r\n`\r\n\r\nexport default props => (\r\n  <Post>\r\n    <PostLink to={props.post.fields.slug}>\r\n      <PostTitle>{props.post.frontmatter.title}</PostTitle>\r\n      <PostDesc>{props.post.excerpt}</PostDesc>\r\n    </PostLink>\r\n    <PostInfo>\r\n      <PostTime datetime={props.post.frontmatter.date}>\r\n        {props.post.frontmatter.date}\r\n      </PostTime>\r\n      <PostTag>\r\n        <p>{props.post.frontmatter.tag}</p>\r\n      </PostTag>\r\n    </PostInfo>\r\n  </Post>\r\n)\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport PostListItem from '../components/PostListItem'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.ol`\r\n  list-style: none;\r\n  padding: 0;\r\n`\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n          totalCount\r\n          edges {\r\n            node {\r\n              id\r\n              frontmatter {\r\n                title\r\n                date\r\n                tag\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n              excerpt(pruneLength: 64)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <Wrapper>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <PostListItem key={node.id} post={node} />\r\n        ))}\r\n      </Wrapper>\r\n    )}\r\n  />\r\n)\r\n"],"sourceRoot":""}